# Checks for vmware via VI Perl interface
# Note naming convention has upper case shortnames for VMs and lower case FQDNs for hosts - wheras all nagios config is lower case
# NEED A CUSTOM MACRO FOR EACH VM ADDING $_UPPERCASEHOSTNAME$

# VM checks through vcenter
# 'check_esx_dc_vm_cpu_usage' command definition - don't use for guests - using check_nt
define command{
	command_name	check_esx_dc_vm_cpu_usage
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -N '$_UPPERCASEHOSTNAME$' -l cpu -s usage -w '$ARG2$' -c '$ARG3$'
}

# We seem to have high wait times - 18000ms at least
define command{
	command_name	check_esx_dc_vm_cpu_wait
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -N '$_UPPERCASEHOSTNAME$' -l cpu -s wait -w '$ARG2$' -c '$ARG3$'
}
# don't use on guests - using check_nt
define command{
	command_name	check_esx_dc_vm_mem_usage
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -N '$_UPPERCASEHOSTNAME$' -l mem -s usage -w '$ARG2$' -c '$ARG3$'
}

# vm swap used (not inside the guest) - in MB
define command{
	command_name	check_esx_dc_vm_swap_usage
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -N '$_UPPERCASEHOSTNAME$' -l mem -s swap -w '$ARG2$' -c '$ARG3$'
} 

# don't use on guests - using snmp
define command{
	command_name	check_esx_dc_net_usage
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -N '$_UPPERCASEHOSTNAME$' -l net -s usage -w '$ARG2$' -c '$ARG3$'
}

# don't use on guests - using check_nt
define command{
	command_name	check_esx_dc_vm_runtime_cpu
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -N '$_UPPERCASEHOSTNAME$' -l runtime -s cpu -w '$ARG2$' -c '$ARG3$'
}

# allocated memory - don't use ?
define command{
	command_name	check_esx_dc_vm_runtime_mem
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -N '$_UPPERCASEHOSTNAME$' -l runtime -s mem -w '$ARG2$' -c '$ARG3$'
}

# green/yellow/red
define command{
	command_name	check_esx_dc_vm_runtime_status
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -N '$_UPPERCASEHOSTNAME$' -l runtime -s status
}

# up/down/suspended
define command{
	command_name	check_esx_dc_vm_runtime_state
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -N '$_UPPERCASEHOSTNAME$' -l runtime -s state
}

# all issues with the host
define command{
	command_name	check_esx_dc_vm_runtime_issues
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -N '$_UPPERCASEHOSTNAME$' -l runtime -s issues
}

# total connections to 'physical' console
define command{
	command_name	check_esx_dc_vm_runtime_consoleconnections
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -N '$_UPPERCASEHOSTNAME$' -l runtime -s consoleconnections
}

# status of guest OS (booting/running etc)
define command{
	command_name	check_esx_dc_vm_runtime_guest
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -N '$_UPPERCASEHOSTNAME$' -l runtime -s guest
}

# status of vmware tools (outdated/not running etc)
define command{
	command_name	check_esx_dc_vm_runtime_tools
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -N '$_UPPERCASEHOSTNAME$' -l runtime -s tools
}

# Host checks
# CPU usage in %
define command{
	command_name	check_esx_dc_host_cpu_usage
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l cpu -s usage -w '$ARG2$' -c '$ARG3$'
}

# MEM usage in %
define command{
	command_name	check_esx_dc_host_mem_usage
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l mem -s usage -w '$ARG2$' -c '$ARG3$'
}

# host swap usage - in MB - limits will vary wildly between old/new hosts + esx3.5/4
define command{
	command_name	check_esx_dc_host_swap_usage
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l mem -s swap -w '$ARG2$' -c '$ARG3$'
}

# Net usage in kbps - don't use - use snmp
define command{
	command_name	check_esx_dc_host_net_usage
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l net -s usage -w '$ARG2$' -c '$ARG3$'
}

# NIc status - are all nics plugged in
define command{
	command_name	check_esx_dc_host_net_nic
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l net -s nic
}

# any runtime issues
define command{
	command_name	check_esx_dc_host_runtime_issues
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l runtime -s issues
}

# green/yellow/red
define command{
	command_name	check_esx_dc_host_runtime_status
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l runtime -s status
}

# whether comms is working with vcenter or not
define command{
	command_name	check_esx_dc_host_runtime_con
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l runtime -s con
}

# sensors etc
define command{
	command_name	check_esx_dc_host_runtime_health
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l runtime -s health
}

# maintenance mode - low prio
define command{
	command_name	check_esx_dc_host_runtime_maintenance
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l runtime -s maintenance
}

# list machines - not sure whether to use this one - can alert on amount of machines currently running.. - but also useful as just a list..
define command{
	command_name	check_esx_dc_host_runtime_list
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l runtime -s list
}

# read latency in ms
define command{
	command_name	check_esx_dc_host_io_read
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l io -s read -w '$ARG2$' -c '$ARG3$'
}

# write latency in ms
define command{
	command_name	check_esx_dc_host_io_write
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l io -s write -w '$ARG2$' -c '$ARG3$'
}

# aborted IO attempts (due to massive latency)
define command{
	command_name	check_esx_dc_host_io_aborted
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l io -s aborted -w '$ARG2$' -c '$ARG3$'
}

# bus resets
define command{
	command_name	check_esx_dc_host_io_resets
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l io -s resets -w '$ARG2$' -c '$ARG3$'
}

# kernel latency in ms
define command{
	command_name	check_esx_dc_host_io_kernel
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l io -s kernel -w '$ARG2$' -c '$ARG3$'
}

# device latency in ms
define command{
	command_name	check_esx_dc_host_io_device
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l io -s device -w '$ARG2$' -c '$ARG3$'
}

# queue latency in ms
define command{
	command_name	check_esx_dc_host_io_queue
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l io -s queue -w '$ARG2$' -c '$ARG3$'
}

# local vmfs commands - pretty much all of our servers have a local storage array - in a cluster scenario, SAN/NFS datastores should be checked from the Cluster perspective
# service needs to include '%' after argument as this command will return both MB and % otherwise
define command{
	command_name	check_esx_dc_host_vmfs
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l vmfs -s '$ARG2$' -w '$ARG3$' -c '$ARG4$'
}

# check all needed services are running
define command{
	command_name	check_esx_dc_host_services
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l service -s sshd,ntpd,vmware-vpxa
}

# check all visible adaptors - this not quite working right atm - works on a couple of machines - but some hba's come back as unknown (.e.g. vmhba32)
define command{
	command_name	check_esx_dc_host_storage_adapter
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l storage -s adapter
}

# check all visible luns - this also working a little bit funky - works ok for some servers?
define command{
	command_name	check_esx_dc_host_storage_luns
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l storage -s lun
}

# check paths - this one works fine with esx3, but wierd on vsphere
define command{
	command_name	check_esx_dc_host_storage_paths
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -H '$HOSTALIAS$' -l storage -s path -w '$ARG2$' -c '$ARG3$'
}

### DC Specific ###
# GLOBAL latencies - not sure how useful these are..
# read latency in ms
define command{
	command_name	check_esx_dc_io_read
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -l io -s read -w '$ARG2$' -c '$ARG3$'
}

# write latency in ms
define command{
	command_name	check_esx_dc_io_write
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -l io -s write -w '$ARG2$' -c '$ARG3$'
}

# aborted IO attempts (due to massive latency)
define command{
	command_name	check_esx_dc_io_aborted
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -l io -s aborted -w '$ARG2$' -c '$ARG3$'
}

# bus resets
define command{
	command_name	check_esx_dc_io_resets
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -l io -s resets -w '$ARG2$' -c '$ARG3$'
}

# kernel latency in ms
define command{
	command_name	check_esx_dc_io_kernel
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -l io -s kernel -w '$ARG2$' -c '$ARG3$'
}

# device latency in ms
define command{
	command_name	check_esx_dc_io_device
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -l io -s device -w '$ARG2$' -c '$ARG3$'
}

# queue latency in ms
define command{
	command_name	check_esx_dc_io_queue
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -l io -s queue -w '$ARG2$' -c '$ARG3$'
}

# global vmfs status - use this for san-based luns
define command{
	command_name	check_esx_dc_vmfs
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -l vmfs -s '$ARG2$' -w '$ARG3$' -c '$ARG4$'
}

# global vmfs status - use this for san-based luns
define command{
	command_name	check_esx_dc_vmfs
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -l vmfs -s '$ARG2$' -w '$ARG3$' -c '$ARG4$'
}

# visbility of servers from vcenter
define command{
	command_name	check_esx_dc_hosts
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -l runtime -s listhosts
}

# check recomendations for a cluster - maybe attach this to a dummy host
define command{
	command_name	check_esx_dc_cluster_reccomendations
	command_line	/usr/local/nagios/scripbin/op5plugins/check_esx3.pl -D '$ARG1$' -u '$USER11$' -p '$USER12$' -l recommendations -s '$ARG2$'
}

